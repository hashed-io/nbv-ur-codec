const fs = require('fs').promises
const { Encoder } = require('../src');

(async () => {
  const psbt = '70736274ff0100890100000001f1c6c4e36ef3789acbac3623f0df70dd6a9493d0c8365d099b5012dd3412462c0000000000fdffffff0256591e0000000000220020aab50af3478aa38796e02b20dacaf35dba86e722b5c0499ca0c1b847761354cf1027000000000000220020e31b5a8ff3a914a4ef1f6c32d1d42bd957a3da66fc475ca0d77b2cfcb5870a2700000000000100ea02000000000101dfa8c38087140a97dabd8a0a9a329d3dd712b41063202721a8e68d673a425e810000000000fdffffff0280841e0000000000220020d68242594e477f7c7fd7abe46d6fc07140696b4501dbdb3e4ec30c3c8b9172bf2a6e8e0200000000160014d35195e299b45c20c41d269ab312e139fe5661c202473044022012ddc313ec9140efa2816ad34efa81a398f409042635970feea231c80049a017022017160bca60ebad0abf97471344e421ca5afbb75ae6b9b9ae15e32ce86b9d6baa012103e54b78634b3e292e03db6f14e5be91a34f6ea01989be970321f50027b0288056483b0b0001012b80841e0000000000220020d68242594e477f7c7fd7abe46d6fc07140696b4501dbdb3e4ec30c3c8b9172bf220203b14fac12219c5c80d6f6b057b8ea25a6a7f8c98f5f82e58224003530d9d909f14730440220582687e05dea5b6babc5fd1de2b7c0a20c8ed62caa54dd9611c421fef7ecdb020220097d42e0664f5165d6b81a1bb702f954bc7eae0285150c094a925dca90b9df370101058b5221031adcfdcfb6ed3fc7b0556ffee830644379cfde8c33e9484acf00cf5d2b4d7bf5210357693b653b9098c2009228541cfe48b98c0a4cf587b6b088656488c70fe5225f2103b14fac12219c5c80d6f6b057b8ea25a6a7f8c98f5f82e58224003530d9d909f12103b65ce57a7e541c1cb1d5a5a4d59266c1b5904d5ab341356ab46bc52ae337912154ae2206031adcfdcfb6ed3fc7b0556ffee830644379cfde8c33e9484acf00cf5d2b4d7bf51c0cdb4ee230000080000000800000008002000080000000000000000022060357693b653b9098c2009228541cfe48b98c0a4cf587b6b088656488c70fe5225f1c993d5aa8300000800000008000000080020000800000000000000000220603b14fac12219c5c80d6f6b057b8ea25a6a7f8c98f5f82e58224003530d9d909f11cd6b372ce300000800000008000000080020000800000000000000000220603b65ce57a7e541c1cb1d5a5a4d59266c1b5904d5ab341356ab46bc52ae33791211cddb3f11e300000800000008000000080020000800000000000000000002202021aef5e398929e3223356f5895b861eb80d0c4497183025d98ef3e2a6af33f1041cddb3f11e300000800000008000000080020000800100000000000000220203409224bafaf3312604af3dd38214861d038b7f05abc50806353e4ca53ab415e11c993d5aa8300000800000008000000080020000800100000000000000220203647d2ab3390b32893f00f4c1e905e0289ccc2425dcd8598b1e397223b2786c2a1c0cdb4ee2300000800000008000000080020000800100000000000000220203d9a001127fc17b17d88ab3a912c5b9de2b76330dbaccb1aa33b12c882d4771df1cd6b372ce300000800000008000000080020000800100000000000000002202026c586485b5df5c9dce0f521f95a08823a204b362619a5ac0af43a706ae9831371cddb3f11e300000800000008000000080020000800000000001000000220202c0f4e3ca5f1d9601ba2978d96115a9fe1ccb9ccc422dae80a6ffae5ab042b7731c0cdb4ee230000080000000800000008002000080000000000100000022020354ae9f6cc9fc038c394632918275c727a4b90b3762f4e9cf078a16f1a53a20021c993d5aa830000080000000800000008002000080000000000100000022020390ac208207d43ce5d1f77ad023c78c6b4af982ede74056135fbd02f163d9ebcb1cd6b372ce30000080000000800000008002000080000000000100000000'
  const encoder = new Encoder()
  const fragments = encoder.psbtToQRCode(psbt, 200)
  for (const [i, fragment] of fragments.entries()) {
    const file = await fs.open(`/home/sebastian/Downloads/hashed-test-psbt-nbv-codec-${i}.svg`, 'w')
    await file.writeFile(fragment)
    console.log(`Created psbt qr file ${i} of ${fragments.length}`)
  }
})()
